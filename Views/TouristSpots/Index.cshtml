@model IEnumerable<TourismWeb.Models.TouristSpot>

@{
    ViewData["Title"] = "ƒê·ªãa ƒëi·ªÉm du l·ªãch";
    var currentSort = Context.Request.Query["sortBy"].ToString() ?? "default";
    // L·∫•y userId cho JavaScript
    var currentUserIdForJs = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value ?? "0";
}

@section Styles {
    @* <link rel="stylesheet" href="~/css/spot.css" asp-append-version="true" /> *@
    <link rel="stylesheet" href="~/css/_Layout.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
    <style>
        .location-favorite {
            cursor: pointer;
        }
    </style>
}

<!-- ƒê·∫∑t 1 l·∫ßn d∆∞·ªõi c√πng ho·∫∑c ƒë·∫ßu trang -->
<form id="antiForgeryForm" style="display: none;">
    @Html.AntiForgeryToken()
</form>

<div class="exam-container">
    <!-- Main content -->
    <div class="main-content">
        <!-- Header section -->
        <div class="header-section">
            <div class="header-content">
                <h1 class="page-title">Kh√°m ph√° ƒë·ªãa ƒëi·ªÉm du l·ªãch</h1>
                <p class="page-subtitle">T√¨m ki·∫øm nh·ªØng ƒëi·ªÉm ƒë·∫øn tuy·ªát v·ªùi cho chuy·∫øn ƒëi ti·∫øp theo c·ªßa b·∫°n</p>
            </div>
            <a asp-action="Create" class="create-button">
                <i class="fas fa-plus-circle"></i> Th√™m ƒë·ªãa ƒëi·ªÉm m·ªõi
            </a>
        </div>

        <!-- Search bar -->
        <div class="search-container">
            <div class="search-bar">
                <i class="fas fa-search search-icon"></i>
                <input type="text" id="spotSearch" placeholder="T√¨m ki·∫øm ƒë·ªãa ƒëi·ªÉm du l·ªãch..." class="search-input">
            </div>
        </div>

        <!-- Sort options -->
        <div class="sort-options">
            <a asp-action="Index" asp-route-sortBy="default"
                class="sort-option @(currentSort == "default" ? "active" : "")">
                <i class="fas fa-sort"></i> M·∫∑c ƒë·ªãnh
            </a>
            <a asp-action="Index" asp-route-sortBy="latest"
                class="sort-option @(currentSort == "latest" ? "active" : "")">
                <i class="fas fa-clock"></i> M·ªõi nh·∫•t
            </a>
            <a asp-action="Index" asp-route-sortBy="mostLiked"
                class="sort-option @(currentSort == "mostLiked" ? "active" : "")">
                <i class="fas fa-heart"></i> Y√™u th√≠ch nh·∫•t
            </a>
            <a asp-action="Index" asp-route-sortBy="popular"
                class="sort-option @(currentSort == "popular" ? "active" : "")">
                <i class="fas fa-fire"></i> Ph·ªï bi·∫øn
            </a>
        </div>

        <!-- Locations grid -->
        <div class="locations-grid" id="locationsGrid">
            @foreach (var item in Model)
            {
                <div class="location-card animate__animated animate__fadeIn" id="spot-card-@item.SpotId">
                    <div class="location-image">
                        @if (item.CreatedAt > DateTime.Now.AddDays(-7))
                        {
                            <div class="location-highlight">M·ªöI</div>
                        }
                        <img src="@item.ImageUrl" alt="@item.Name" loading="lazy">
                        <div class="location-favorite" data-spot-id="@item.SpotId">
                            <span class="heart-icon">@(item.IsLikedByCurrentUser ? "‚ù§Ô∏è" : "ü§ç")</span>
                        </div>
                        <div class="location-overlay">
                            <a asp-action="Details" asp-route-id="@item.SpotId" class="view-details-btn">
                                <i class="fas fa-eye"></i> Xem chi ti·∫øt
                            </a>
                        </div>
                    </div>
                    <div class="location-details">
                        <h3 class="location-name">@item.Name</h3>
                        <div class="location-meta">
                            <div class="meta-item">
                                <span class="interaction-icon"><i class="fas fa-heart"></i></span>
                                <span class="like-count" id="like-count-@item.SpotId">@(item.Favorites?.Count ?? 0)</span>
                            </div>
                            <div class="meta-item">
                                <span><i class="fas fa-map-marker-alt"></i></span>
                                <span class="location-address">@item.Address</span>
                            </div>
                        </div>
                        <div class="location-tags">
                            <a asp-action="Index" asp-route-categoryId="@item.CategoryId"
                                class="tag">@item.Category.Name</a>
                        </div>
                        <div class="location-actions">
                            <a asp-action="Details" asp-route-id="@item.SpotId" class="action-link details">
                                <i class="fas fa-info-circle"></i> Chi ti·∫øt
                            </a>
                            <a asp-action="Edit" asp-route-id="@item.SpotId" class="action-link edit">
                                <i class="fas fa-edit"></i> S·ª≠a
                            </a>
                            <a asp-action="Delete" asp-route-id="@item.SpotId" class="action-link delete">
                                <i class="fas fa-trash-alt"></i> X√≥a
                            </a>
                        </div>
                    </div>
                </div>
            }

            @if (!Model.Any())
            {
                <div class="empty-state animate__animated animate__fadeIn">
                    <div class="empty-icon"><i class="fas fa-map-marked-alt"></i></div>
                    <h3>Ch∆∞a c√≥ ƒë·ªãa ƒëi·ªÉm du l·ªãch n√†o</h3>
                    <p>H√£y th√™m ƒë·ªãa ƒëi·ªÉm du l·ªãch ƒë·∫ßu ti√™n c·ªßa b·∫°n!</p>
                    <a asp-action="Create" class="btn-add-first">
                        <i class="fas fa-plus-circle"></i> Th√™m ƒë·ªãa ƒëi·ªÉm
                    </a>
                </div>
            }
        </div>
    </div>

    <!-- Sidebar -->
    <div class="sidebar">
        <!-- Categories -->
        <div class="sidebar-section">
            <h3 class="sidebar-title"><i class="fas fa-th-list"></i> Danh m·ª•c</h3>
            <ul class="category-list">
                @{
                    // L·∫•y categoryId hi·ªán t·∫°i t·ª´ query string ƒë·ªÉ ƒë√°nh d·∫•u danh m·ª•c ƒëang ƒë∆∞·ª£c ch·ªçn
                    var currentCategoryId = Context.Request.Query["categoryId"].ToString();

                    // Gi·∫£ ƒë·ªãnh r·∫±ng b·∫°n c√≥ th·ªÉ truy c·∫≠p danh s√°ch danh m·ª•c t·ª´ ViewBag ho·∫∑c m·ªôt ngu·ªìn kh√°c
                    var categories = ViewBag.Categories as List<TourismWeb.Models.Category> ?? new
                    List<TourismWeb.Models.Category>();

                    if (categories.Any())
                    {
                        <li class="category-item">
                            <a asp-action="Index" class="@(string.IsNullOrEmpty(currentCategoryId) ? "active" : "")">
                                <span><i class="fas fa-globe-asia"></i> T·∫•t c·∫£</span>
                                <span class="category-count">@ViewBag.AllTouristSpotsCount</span>
                            </a>
                        </li>

                        foreach (var category in categories)
                        {
                            <li class="category-item">
                                <a asp-action="Index" asp-route-categoryId="@category.CategoryId"
                                    class="@(currentCategoryId == category.CategoryId.ToString() ? "active" : "")">
                                    <span>@category.Name</span>
                                    <span class="category-count">@(category.TouristSpots?.Count ?? 0)</span>
                                </a>
                            </li>
                        }
                    }
                    else
                    {
                        // Hi·ªÉn th·ªã danh m·ª•c m·∫´u n·∫øu kh√¥ng c√≥ d·ªØ li·ªáu th·ª±c
                        <li class="category-item">
                            <a href="#">
                                <span><i class="fas fa-umbrella-beach"></i> B√£i bi·ªÉn, ƒë·∫£o</span>
                                <span class="category-count">26</span>
                            </a>
                        </li>
                        <li class="category-item">
                            <a href="#">
                                <span><i class="fas fa-mountain"></i> C·∫£nh ƒë·∫πp</span>
                                <span class="category-count">32</span>
                            </a>
                        </li>
                        <li class="category-item">
                            <a href="#">
                                <span><i class="fas fa-landmark"></i> Di t√≠ch</span>
                                <span class="category-count">29</span>
                            </a>
                        </li>
                    }
                }
            </ul>
        </div>

        <!-- Popular locations -->
        <div class="sidebar-section">
            <h3 class="sidebar-title"><i class="fas fa-fire"></i> ƒê·ªãa ƒëi·ªÉm ph·ªï bi·∫øn</h3>

            @{
                // S·ª≠ d·ª•ng d·ªØ li·ªáu t·ª´ ViewBag.PopularSpots thay v√¨ x·ª≠ l√Ω trong View
                var popularSpots = ViewBag.PopularSpots as List<TourismWeb.Models.TouristSpot> ?? new
                List<TourismWeb.Models.TouristSpot>();

                if (popularSpots.Any())
                {
                    foreach (var spot in popularSpots)
                    {
                        <div class="popular-location">
                            <div class="popular-image">
                                <img src="@spot.ImageUrl" alt="@spot.Name" loading="lazy">
                            </div>
                            <div class="popular-details">
                                <h4>
                                    <a asp-action="Details" asp-route-id="@spot.SpotId">@spot.Name</a>
                                </h4>
                                <div class="popular-meta">
                                    <i class="fas fa-heart"></i> @(spot.Favorites?.Count ?? 0) l∆∞·ª£t th√≠ch
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    // Hi·ªÉn th·ªã d·ªØ li·ªáu m·∫´u n·∫øu kh√¥ng c√≥ d·ªØ li·ªáu th·ª±c
                    <div class="popular-location">
                        <div class="popular-image">
                            <img src="~/images/hoian2.jpg" alt="H·ªôi An" loading="lazy">
                        </div>
                        <div class="popular-details">
                            <h4>Ph·ªë c·ªï H·ªôi An</h4>
                            <div class="popular-meta">
                                <i class="fas fa-heart"></i> 358 l∆∞·ª£t th√≠ch
                            </div>
                        </div>
                    </div>
                    <div class="popular-location">
                        <div class="popular-image">
                            <img src="~/images/hangsondong.jpg" alt="Hang S∆°n ƒêo√≤ng" loading="lazy">
                        </div>
                        <div class="popular-details">
                            <h4>Hang S∆°n ƒêo√≤ng</h4>
                            <div class="popular-meta">
                                <i class="fas fa-heart"></i> 412 l∆∞·ª£t th√≠ch
                            </div>
                        </div>
                    </div>
                }
            }

            <a asp-action="Popular" class="view-more">
                <i class="fas fa-angle-right"></i> Xem th√™m
            </a>
        </div>

        <!-- Recent posts -->
        <div class="sidebar-section">
            <h3 class="sidebar-title"><i class="fas fa-newspaper"></i> B√†i vi·∫øt g·∫ßn ƒë√¢y</h3>

            @{
                // Gi·∫£ ƒë·ªãnh r·∫±ng b·∫°n c√≥ th·ªÉ truy c·∫≠p danh s√°ch b√†i vi·∫øt g·∫ßn ƒë√¢y t·ª´ ViewBag ho·∫∑c m·ªôt ngu·ªìn kh√°c
                var recentPosts = ViewBag.RecentPosts as List<TourismWeb.Models.Post> ?? new List<TourismWeb.Models.Post>();

                if (recentPosts.Any())
                {
                    foreach (var post in recentPosts)
                    {
                        <div class="recent-post">
                            <div class="recent-image">
                                <img src="@post.ImageUrl" alt="@post.Title" loading="lazy">
                            </div>
                            <div class="recent-details">
                                <h4>
                                    <a asp-controller="Posts" asp-action="Details" asp-route-id="@post.PostId">@post.Title</a>
                                </h4>
                                <div class="post-date">
                                    <i class="far fa-calendar-alt"></i>
                                    <span>@post.CreatedAt.ToString("dd/MM/yyyy")</span>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    // Hi·ªÉn th·ªã d·ªØ li·ªáu m·∫´u n·∫øu kh√¥ng c√≥ d·ªØ li·ªáu th·ª±c
                    <div class="recent-post">
                        <div class="recent-image">
                            <img src="~/images/sondong.webp" alt="S∆°n ƒêo√≤ng" loading="lazy">
                        </div>
                        <div class="recent-details">
                            <h4>
                                <a href="#">Kh√°m ph√° Hang S∆°n ƒêo√≤ng - Hang ƒë·ªông l·ªõn nh·∫•t th·∫ø gi·ªõi</a>
                            </h4>
                            <div class="post-date">
                                <i class="far fa-calendar-alt"></i>
                                <span>12/03/2025</span>
                            </div>
                        </div>
                    </div>
                    <div class="recent-post">
                        <div class="recent-image">
                            <img src="~/images/banhloc.jpg" alt="B√°nh L·ªçc" loading="lazy">
                        </div>
                        <div class="recent-details">
                            <h4>
                                <a href="#">Top 10 m√≥n ƒÉn kh√¥ng th·ªÉ b·ªè qua khi ƒë·∫øn Hu·∫ø</a>
                            </h4>
                            <div class="post-date">
                                <i class="far fa-calendar-alt"></i>
                                <span>05/03/2025</span>
                            </div>
                        </div>
                    </div>
                }
            }

            <a asp-controller="Posts" asp-action="Index" class="view-more">
                <i class="fas fa-angle-right"></i> Xem th√™m
            </a>
        </div>

        <!-- Newsletter -->
        <div class="sidebar-section">
            <h3 class="sidebar-title"><i class="far fa-envelope"></i> ƒêƒÉng k√Ω nh·∫≠n tin</h3>
            <div class="newsletter-container">
                <p>Nh·∫≠n th√¥ng tin v·ªÅ c√°c ƒë·ªãa ƒëi·ªÉm du l·ªãch m·ªõi v√† ∆∞u ƒë√£i h·∫•p d·∫´n</p>
                <form class="newsletter-form">
                    <input type="email" placeholder="Email c·ªßa b·∫°n" class="newsletter-input" required>
                    <button type="submit" class="newsletter-button">
                        <i class="fas fa-paper-plane"></i>
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const antiForgeryToken = document.querySelector('#antiForgeryForm input[name="__RequestVerificationToken"]').value;
            const currentUserId = parseInt('@currentUserIdForJs'); // L·∫•y userId t·ª´ C#

            // X·ª≠ l√Ω y√™u th√≠ch
            document.querySelectorAll('.location-favorite').forEach(favoriteDiv => {
                favoriteDiv.addEventListener('click', async function () {
                    if (currentUserId === 0) {
                        showToast('Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ y√™u th√≠ch ƒë·ªãa ƒëi·ªÉm n√†y.', 'warning');
                        setTimeout(() => {
                            window.location.href = '/Identity/Account/Login';
                        }, 2000);
                        return;
                    }

                    const spotId = this.dataset.spotId;
                    const heartIconSpan = this.querySelector('.heart-icon');
                    const likeCountSpan = document.getElementById(`like-count-${spotId}`);

                    // T·∫°m th·ªùi thay ƒë·ªïi icon ƒë·ªÉ ng∆∞·ªùi d√πng th·∫•y ph·∫£n h·ªìi ngay
                    const isCurrentlyLiked = heartIconSpan.textContent === '‚ù§Ô∏è';
                    heartIconSpan.textContent = isCurrentlyLiked ? 'ü§ç' : '‚ù§Ô∏è';

                    // Th√™m hi·ªáu ·ª©ng
                    this.classList.add('animate__animated', 'animate__heartBeat');
                    setTimeout(() => {
                        this.classList.remove('animate__animated', 'animate__heartBeat');
                    }, 1000);

                    try {
                        const response = await fetch(`/TouristSpots/ToggleFavoriteSpot?spotId=${spotId}`, {
                            method: 'POST',
                            headers: {
                                'RequestVerificationToken': antiForgeryToken
                            },
                        });

                        if (!response.ok) {
                            // Ho√†n t√°c l·∫°i icon n·∫øu l·ªói
                            heartIconSpan.textContent = isCurrentlyLiked ? '‚ù§Ô∏è' : 'ü§ç';
                            const errorData = await response.json().catch(() => null);
                            if (errorData && errorData.aniauth) {
                                showToast(errorData.message || 'Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ th·ª±c hi·ªán thao t√°c n√†y.', 'warning');
                                setTimeout(() => {
                                    window.location.href = '/Identity/Account/Login';
                                }, 2000);
                            } else {
                                showToast(errorData ? errorData.message : 'C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i.', 'error');
                            }
                            return;
                        }

                        const data = await response.json();

                        if (data.success) {
                            heartIconSpan.textContent = data.favorited ? '‚ù§Ô∏è' : 'ü§ç';
                            if (likeCountSpan) {
                                likeCountSpan.textContent = data.likeCount;

                                // Hi·ªáu ·ª©ng cho s·ªë l∆∞·ª£t th√≠ch
                                likeCountSpan.classList.add('animate__animated', 'animate__fadeIn');
                                setTimeout(() => {
                                    likeCountSpan.classList.remove('animate__animated', 'animate__fadeIn');
                                }, 1000);
                            }

                            showToast(data.favorited ? 'ƒê√£ th√™m v√†o danh s√°ch y√™u th√≠ch!' : 'ƒê√£ x√≥a kh·ªèi danh s√°ch y√™u th√≠ch!', 'success');
                        } else {
                            // Ho√†n t√°c l·∫°i icon n·∫øu server b√°o l·ªói logic
                            heartIconSpan.textContent = isCurrentlyLiked ? '‚ù§Ô∏è' : 'ü§ç';
                            if (data.aniauth) {
                                showToast(data.message || 'Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ th·ª±c hi·ªán thao t√°c n√†y.', 'warning');
                                setTimeout(() => {
                                    window.location.href = '/Identity/Account/Login';
                                }, 2000);
                            } else {
                                showToast(data.message || 'C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t y√™u th√≠ch.', 'error');
                            }
                        }
                    } catch (error) {
                        // Ho√†n t√°c l·∫°i icon n·∫øu l·ªói m·∫°ng
                        heartIconSpan.textContent = isCurrentlyLiked ? '‚ù§Ô∏è' : 'ü§ç';
                        console.error('L·ªói khi toggle favorite:', error);
                        showToast('C√≥ l·ªói k·∫øt n·ªëi, vui l√≤ng th·ª≠ l·∫°i.', 'error');
                    }
                });
            });

            // T√¨m ki·∫øm ƒë·ªãa ƒëi·ªÉm
            const searchInput = document.getElementById('spotSearch');
            if (searchInput) {
                searchInput.addEventListener('input', function () {
                    const searchTerm = this.value.toLowerCase().trim();
                    const cards = document.querySelectorAll('.location-card');

                    cards.forEach(card => {
                        const name = card.querySelector('.location-name').textContent.toLowerCase();
                        const address = card.querySelector('.location-address')?.textContent.toLowerCase() || '';
                        const tags = Array.from(card.querySelectorAll('.tag')).map(tag => tag.textContent.toLowerCase());

                        const isMatch = name.includes(searchTerm) ||
                            address.includes(searchTerm) ||
                            tags.some(tag => tag.includes(searchTerm));

                        if (isMatch) {
                            card.style.display = '';
                            card.classList.add('animate__animated', 'animate__fadeIn');
                            setTimeout(() => {
                                card.classList.remove('animate__animated', 'animate__fadeIn');
                            }, 500);
                        } else {
                            card.style.display = 'none';
                        }
                    });

                    // Hi·ªÉn th·ªã th√¥ng b√°o n·∫øu kh√¥ng c√≥ k·∫øt qu·∫£
                    const visibleCards = document.querySelectorAll('.location-card[style=""]').length;
                    const emptyState = document.querySelector('.empty-state');
                    const locationsGrid = document.getElementById('locationsGrid');

                    if (visibleCards === 0 && searchTerm !== '' && !emptyState) {
                        // T·∫°o th√¥ng b√°o kh√¥ng c√≥ k·∫øt qu·∫£
                        const noResults = document.createElement('div');
                        noResults.className = 'empty-state animate__animated animate__fadeIn';
                        noResults.id = 'noSearchResults';
                        noResults.innerHTML = `
                                                                                                            <div class="empty-icon"><i class="fas fa-search"></i></div>
                                                                                                            <h3>Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£</h3>
                                                                                                            <p>Kh√¥ng t√¨m th·∫•y ƒë·ªãa ƒëi·ªÉm n√†o ph√π h·ª£p v·ªõi t·ª´ kh√≥a "${searchTerm}"</p>
                                                                                                            <button class="btn-add-first" onclick="document.getElementById('spotSearch').value = ''; document.getElementById('spotSearch').dispatchEvent(new Event('input'));">
                                                                                                                <i class="fas fa-undo"></i> X√≥a t√¨m ki·∫øm
                                                                                                            </button>
                                                                                                        `;

                        // X√≥a th√¥ng b√°o c≈© n·∫øu c√≥
                        const oldNoResults = document.getElementById('noSearchResults');
                        if (oldNoResults) {
                            oldNoResults.remove();
                        }

                        locationsGrid.appendChild(noResults);
                    } else if ((visibleCards > 0 || searchTerm === '') && document.getElementById('noSearchResults')) {
                        document.getElementById('noSearchResults').remove();
                    }
                });
            }

            // Hi·ªáu ·ª©ng hover cho card
            document.querySelectorAll('.location-card').forEach(card => {
                card.addEventListener('mouseenter', function () {
                    const overlay = this.querySelector('.location-overlay');
                    if (overlay) {
                        overlay.style.opacity = '1';
                    }
                });

                card.addEventListener('mouseleave', function () {
                    const overlay = this.querySelector('.location-overlay');
                    if (overlay) {
                        overlay.style.opacity = '0';
                    }
                });
            });

            // Hi·ªáu ·ª©ng cho newsletter form
            const newsletterForm = document.querySelector('.newsletter-form');
            if (newsletterForm) {
                newsletterForm.addEventListener('submit', function (e) {
                    e.preventDefault();
                    const email = this.querySelector('input[type="email"]').value;
                    if (email) {
                        this.reset();
                        showToast('C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω nh·∫≠n tin!', 'success');
                    }
                });
            }

            // T·∫°o toast notification
            function showToast(message, type = 'info') {
                // Ki·ªÉm tra xem ƒë√£ c√≥ container ch∆∞a
                let toastContainer = document.getElementById('toast-container');
                if (!toastContainer) {
                    toastContainer = document.createElement('div');
                    toastContainer.id = 'toast-container';
                    document.body.appendChild(toastContainer);
                }

                // T·∫°o toast
                const toast = document.createElement('div');
                toast.className = `toast toast-${type} animate__animated animate__fadeInRight`;

                // Icon d·ª±a v√†o lo·∫°i th√¥ng b√°o
                let icon = '';
                switch (type) {
                    case 'success': icon = '<i class="fas fa-check-circle"></i>'; break;
                    case 'error': icon = '<i class="fas fa-exclamation-circle"></i>'; break;
                    case 'warning': icon = '<i class="fas fa-exclamation-triangle"></i>'; break;
                    default: icon = '<i class="fas fa-info-circle"></i>';
                }

                toast.innerHTML = `
                                                                                                    <div class="toast-content">
                                                                                                        <div class="toast-icon">${icon}</div>
                                                                                                        <div class="toast-message">${message}</div>
                                                                                                    </div>
                                                                                                    <button class="toast-close"><i class="fas fa-times"></i></button>
                                                                                                `;

                // Th√™m v√†o container
                toastContainer.appendChild(toast);

                // X·ª≠ l√Ω n√∫t ƒë√≥ng
                toast.querySelector('.toast-close').addEventListener('click', function () {
                    toast.classList.replace('animate__fadeInRight', 'animate__fadeOutRight');
                    setTimeout(() => {
                        toast.remove();
                    }, 500);
                });

                // T·ª± ƒë·ªông ƒë√≥ng sau 5 gi√¢y
                setTimeout(() => {
                    if (toast.parentNode) {
                        toast.classList.replace('animate__fadeInRight', 'animate__fadeOutRight');
                        setTimeout(() => {
                            toast.remove();
                        }, 500);
                    }
                }, 5000);
            }
        });
    </script>
}
<style>
    /* Main layout */
    :root {
        --primary-color: #2563eb;
        --primary-hover: #1d4ed8;
        --primary-light: rgba(37, 99, 235, 0.1);
        --secondary-color: #10b981;
        --secondary-hover: #059669;
        --danger-color: #ef4444;
        --warning-color: #f59e0b;
        --info-color: #3b82f6;
        --text-color: #1e293b;
        --text-light: #64748b;
        --border-color: #e2e8f0;
        --background-color: #f8fafc;
        --card-background: #ffffff;
        --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
        --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        --shadow-md: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        --shadow-lg: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        --border-radius-sm: 0.25rem;
        --border-radius: 0.5rem;
        --border-radius-lg: 0.75rem;
        --transition: all 0.3s ease;
    }

    @* 
    body {
        background-color: var(--background-color);
        color: var(--text-color);
        font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
        line-height: 1.5;
    } *@

  .exam-container {
        display: grid;
        grid-template-columns: 1fr 320px;
        gap: 30px;
        margin: 0 auto;
        padding: 30px 20px;
        max-width: 1400px;
    }


    /* Header section */
    .header-section {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
        background: linear-gradient(135deg, #5eb7ff, #5eb7ff);
        padding: 30px;
        border-radius: var(--border-radius);
        color: white;
        box-shadow: var(--shadow);
    }

    .header-content {
        max-width: 70%;
    }

    .page-title {
        font-size: 28px;
        font-weight: 700;
        margin: 0 0 10px 0;
        color: white;
    }

    .page-subtitle {
        font-size: 16px;
        opacity: 0.9;
        margin: 0;
    }

    .create-button {
        display: inline-flex;
        align-items: center;
        background-color: white;
        color: var(--primary-color);
        padding: 12px 20px;
        border-radius: var(--border-radius);
        text-decoration: none;
        font-weight: 600;
        transition: var(--transition);
        box-shadow: var(--shadow-sm);
    }

    .create-button i {
        margin-right: 8px;
    }

    .create-button:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow-md);
        color: var(--primary-hover);
    }

    /* Search bar */
    .search-container {
        margin-bottom: 25px;
    }

    .search-bar {
        position: relative;
        width: 100%;
    }

    .search-icon {
        position: absolute;
        left: 15px;
        top: 50%;
        transform: translateY(-50%);
        color: var(--text-light);
    }

    .search-input {
        width: 100%;
        padding: 14px 20px 14px 45px;
        border: 1px solid var(--border-color);
        border-radius: var(--border-radius);
        font-size: 16px;
        transition: var(--transition);
        box-shadow: var(--shadow-sm);
    }

    .search-input:focus {
        outline: none;
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px var(--primary-light);
    }

    /* Sort options */
    .sort-options {
        display: flex;
        gap: 15px;
        margin-bottom: 25px;
        border-bottom: 1px solid var(--border-color);
        padding-bottom: 15px;
        overflow-x: auto;
        scrollbar-width: thin;
    }

    .sort-options::-webkit-scrollbar {
        height: 4px;
    }

    .sort-options::-webkit-scrollbar-thumb {
        background-color: var(--border-color);
        border-radius: 10px;
    }

    .sort-option {
        padding: 10px 16px;
        cursor: pointer;
        border-radius: var(--border-radius);
        font-weight: 500;
        transition: var(--transition);
        white-space: nowrap;
        display: flex;
        align-items: center;
        gap: 6px;
        color: var(--text-color);
        text-decoration: none;
    }

    .sort-option:hover {
        background-color: var(--primary-light);
        color: var(--primary-color);
    }

    .sort-option.active {
        background-color: var(--primary-color);
        color: white;
    }

    /* Locations grid */
    .locations-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 25px;
    }

    .location-card {
        border-radius: var(--border-radius);
        overflow: hidden;
        box-shadow: var(--shadow);
        transition: var(--transition);
        background-color: var(--card-background);
        position: relative;
    }

    .location-card:hover {
        transform: translateY(-5px);
        box-shadow: var(--shadow-lg);
    }

    .location-image {
        position: relative;
        height: 200px;
        overflow: hidden;
    }

    .location-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.5s ease;
    }

    .location-card:hover .location-image img {
        transform: scale(1.05);
    }

    .location-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.4);
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: var(--transition);
    }

    .view-details-btn {
        background-color: white;
        color: var(--text-color);
        padding: 10px 16px;
        border-radius: var(--border-radius);
        text-decoration: none;
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 6px;
        transition: var(--transition);
    }

    .view-details-btn:hover {
        background-color: var(--primary-color);
        color: white;
    }

    .location-highlight {
        position: absolute;
        top: 15px;
        left: 15px;
        background: linear-gradient(135deg, #f43f5e, #e11d48);
        color: white;
        padding: 5px 12px;
        border-radius: var(--border-radius-sm);
        font-size: 12px;
        font-weight: 600;
        z-index: 1;
        box-shadow: var(--shadow-sm);
    }

    .location-favorite {
        position: absolute;
        top: 15px;
        right: 15px;
        background-color: rgba(255, 255, 255, 0.9);
        border-radius: 50%;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: var(--transition);
        z-index: 2;
        box-shadow: var(--shadow-sm);
    }

    .location-favorite:hover {
        transform: scale(1.1);
        box-shadow: var(--shadow);
    }

    .location-details {
        padding: 20px;
    }

    .location-name {
        font-size: 18px;
        font-weight: 600;
        margin: 0 0 12px 0;
        color: var(--text-color);
        line-height: 1.3;
    }

    .location-meta {
        display: flex;
        gap: 15px;
        margin-bottom: 15px;
        font-size: 14px;
        color: var(--text-light);
    }

    .meta-item {
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .meta-item i {
        color: var(--primary-color);
    }

    .location-address {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 150px;
    }

    .location-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        margin-bottom: 15px;
    }

    .tag {
        background-color: var(--primary-light);
        color: var(--primary-color);
        padding: 5px 12px;
        border-radius: var(--border-radius-sm);
        font-size: 12px;
        font-weight: 500;
        text-decoration: none;
        transition: var(--transition);
    }

    .tag:hover {
        background-color: var(--primary-color);
        color: white;
    }

    .location-actions {
        display: flex;
        gap: 10px;
        border-top: 1px solid var(--border-color);
        padding-top: 15px;
    }

    .action-link {
        font-size: 13px;
        text-decoration: none;
        display: flex;
        align-items: center;
        gap: 5px;
        padding: 6px 12px;
        border-radius: var(--border-radius-sm);
        transition: var(--transition);
    }

    .action-link.details {
        color: var(--info-color);
    }

    .action-link.edit {
        color: var(--secondary-color);
    }

    .action-link.delete {
        color: var(--danger-color);
    }

    .action-link:hover {
        background-color: #f1f5f9;
    }

    /* Empty state */
    .empty-state {
        grid-column: 1 / -1;
        text-align: center;
        padding: 60px 20px;
        background-color: white;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
    }

    .empty-icon {
        font-size: 60px;
        margin-bottom: 20px;
        color: var(--primary-color);
    }

    .empty-state h3 {
        font-size: 24px;
        margin-bottom: 10px;
        color: var(--text-color);
    }

    .empty-state p {
        color: var(--text-light);
        margin-bottom: 25px;
        font-size: 16px;
    }

    .btn-add-first {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        background-color: var(--primary-color);
        color: white;
        padding: 12px 24px;
        border-radius: var(--border-radius);
        text-decoration: none;
        font-weight: 500;
        transition: var(--transition);
        border: none;
        cursor: pointer;
    }

    .btn-add-first:hover {
        background-color: var(--primary-hover);
        transform: translateY(-2px);
        box-shadow: var(--shadow);
    }

    /* Sidebar */
    .sidebar {
        position: sticky;
        top: 30px;
        align-self: start;
    }

    .sidebar-section {
        background-color: white;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        margin-bottom: 25px;
        overflow: hidden;
    }

    .sidebar-title {
        font-size: 18px;
        font-weight: 600;
        padding: 20px;
        margin: 0;
        border-bottom: 1px solid var(--border-color);
        color: var(--text-color);
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .sidebar-title i {
        color: var(--primary-color);
    }

    /* Categories */
    .category-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .category-item {
        border-bottom: 1px solid var(--border-color);
    }

    .category-item:last-child {
        border-bottom: none;
    }

    .category-item a {
        display: flex;
        justify-content: space-between;
        padding: 15px 20px;
        text-decoration: none;
        color: var(--text-color);
        transition: var(--transition);
    }

    .category-item a:hover {
        background-color: var(--primary-light);
    }

    .category-item a.active {
        background-color: var(--primary-light);
        color: var(--primary-color);
        font-weight: 600;
    }

    .category-count {
        background-color: #f1f5f9;
        border-radius: 20px;
        padding: 3px 10px;
        font-size: 12px;
        color: var(--text-light);
        transition: var(--transition);
    }

    .category-item a:hover .category-count,
    .category-item a.active .category-count {
        background-color: var(--primary-color);
        color: white;
    }

    /* Popular locations */
    .popular-location {
        display: flex;
        padding: 15px 20px;
        border-bottom: 1px solid var(--border-color);
        transition: var(--transition);
    }

    .popular-location:hover {
        background-color: var(--primary-light);
    }

    .popular-location:last-child {
        border-bottom: none;
    }

    .popular-image {
        width: 70px;
        height: 70px;
        border-radius: var(--border-radius-sm);
        overflow: hidden;
        margin-right: 15px;
        flex-shrink: 0;
    }

    .popular-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .popular-location:hover .popular-image img {
        transform: scale(1.05);
    }

    .popular-details {
        flex: 1;
    }

    .popular-details h4 {
        font-size: 15px;
        margin: 0 0 8px 0;
        color: var(--text-color);
        line-height: 1.3;
    }

    .popular-details h4 a {
        color: inherit;
        text-decoration: none;
        transition: var(--transition);
    }

    .popular-details h4 a:hover {
        color: var(--primary-color);
    }

    .popular-meta {
        font-size: 13px;
        color: var(--text-light);
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .popular-meta i {
        color: #f43f5e;
    }

    /* Recent posts */
    .recent-post {
        display: flex;
        padding: 15px 20px;
        border-bottom: 1px solid var(--border-color);
        transition: var(--transition);
    }

    .recent-post:hover {
        background-color: var(--primary-light);
    }

    .recent-post:last-child {
        border-bottom: none;
    }

    .recent-image {
        width: 80px;
        height: 80px;
        border-radius: var(--border-radius-sm);
        overflow: hidden;
        margin-right: 15px;
        flex-shrink: 0;
    }

    .recent-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .recent-post:hover .recent-image img {
        transform: scale(1.05);
    }

    .recent-details {
        flex: 1;
    }

    .recent-details h4 {
        font-size: 15px;
        margin: 0 0 8px 0;
        color: var(--text-color);
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        line-height: 1.3;
    }

    .recent-details h4 a {
        color: inherit;
        text-decoration: none;
        transition: var(--transition);
    }

    .recent-details h4 a:hover {
        color: var(--primary-color);
    }

    .post-date {
        font-size: 13px;
        color: var(--text-light);
        display: flex;
        align-items: center;
        gap: 5px;
    }

    /* Newsletter */
    .newsletter-container {
        padding: 20px;
    }

    .newsletter-container p {
        margin-top: 0;
        margin-bottom: 15px;
        color: var(--text-light);
        font-size: 14px;
    }

    .newsletter-form {
        display: flex;
        gap: 10px;
    }

    .newsletter-input {
        flex: 1;
        padding: 12px 15px;
        border: 1px solid var(--border-color);
        border-radius: var(--border-radius-sm);
        font-size: 14px;
        transition: var(--transition);
    }

    .newsletter-input:focus {
        outline: none;
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px var(--primary-light);
    }

    .newsletter-button {
        background-color: var(--primary-color);
        color: white;
        border: none;
        border-radius: var(--border-radius-sm);
        padding: 0 15px;
        cursor: pointer;
        transition: var(--transition);
    }

    .newsletter-button:hover {
        background-color: var(--primary-hover);
    }

    .view-more {
        display: block;
        text-align: center;
        padding: 12px;
        background-color: #f1f5f9;
        color: var(--primary-color);
        text-decoration: none;
        font-weight: 500;
        transition: var(--transition);
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 5px;
    }

    .view-more:hover {
        background-color: var(--primary-light);
    }

    /* Toast notifications */
    #toast-container {
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 9999;
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

    .toast {
        min-width: 300px;
        max-width: 400px;
        background-color: white;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow-lg);
        overflow: hidden;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .toast-content {
        display: flex;
        align-items: center;
        padding: 15px;
        flex: 1;
    }

    .toast-icon {
        margin-right: 15px;
        font-size: 20px;
    }

    .toast-message {
        font-size: 14px;
    }

    .toast-close {
        background: none;
        border: none;
        padding: 15px;
        cursor: pointer;
        color: var(--text-light);
        transition: var(--transition);
    }

    .toast-close:hover {
        color: var(--text-color);
    }

    .toast-success .toast-icon {
        color: var(--secondary-color);
    }

    .toast-error .toast-icon {
        color: var(--danger-color);
    }

    .toast-warning .toast-icon {
        color: var(--warning-color);
    }

    .toast-info .toast-icon {
        color: var(--info-color);
    }

    /* Responsive */
    media (max-width: 1200px) {
        .container {
            grid-template-columns: 1fr 280px;
            gap: 20px;
        }
    }

    media (max-width: 992px) {
        .container {
            grid-template-columns: 1fr;
        }

        .sidebar {
            position: static;
            margin-top: 30px;
        }
    }

    media (max-width: 768px) {
        .locations-grid {
            grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
        }

        .header-section {
            flex-direction: column;
            align-items: flex-start;
            gap: 20px;
            padding: 20px;
        }

        .header-content {
            max-width: 100%;
        }

        .create-button {
            width: 100%;
            justify-content: center;
        }
    }

    media (max-width: 576px) {
        .locations-grid {
            grid-template-columns: 1fr;
        }

        .container {
            padding: 15px;
        }

        .header-section {
            padding: 15px;
            margin-bottom: 20px;
        }

        .page-title {
            font-size: 22px;
        }

        .page-subtitle {
            font-size: 14px;
        }

        .search-input {
            padding: 12px 15px 12px 40px;
        }

        #toast-container {
            left: 20px;
            right: 20px;
        }

        .toast {
            min-width: auto;
            width: 100%;
        }
    }
</style>