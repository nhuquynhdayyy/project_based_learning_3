@model IEnumerable<TourismWeb.Models.Post>

@{
    ViewData["Title"] = "Quản Lý Bài Viết";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/cssadmin/posts.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/cssadmin/styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        body, html {
            margin: 0;
            padding: 0;
        }
        .app-container {
            padding: 15px;
            background: linear-gradient(135deg, #f2f7ff 0%, #e6f7ff 100%);
            min-height: 100vh;
        }
        
        .main-content {
            background-color: #fff;
            border-radius: 16px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.08);
            overflow: hidden;
            border: 1px solid rgba(78, 115, 223, 0.1);
        }
        
        .content-wrapper {
            padding: 50px;
            position: relative;
        }
        
        .toggle-sidebar {
            position: absolute;
            left: 50px;
            top: 50px;
            background: #6e47ef;
            border: none;
            font-size: 18px;
            color: white;
            cursor: pointer;
            z-index: 5;
            height: 40px;
            width: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 4px 10px rgba(110, 71, 239, 0.3);
            transition: all 0.3s ease;
        }
        
        .toggle-sidebar:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(110, 71, 239, 0.4);
        }
        
        .page-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid #f0f3f9;
            margin-left: 60px;
        }
        
        .page-title {
            font-size: 28px;
            font-weight: 700;
            color: #2c3e50;
            margin: 0;
            background: linear-gradient(45deg, #3a416f, #6e47ef);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        
        .page-actions {
            display: flex;
            gap: 15px;
        }
        
        .filter-card {
            background-color: #fff;
            padding: 20px;
            border-radius: 16px;
            margin-bottom: 30px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.04);
            border: 1px solid #f0f3f9;
        }

        .filter-card .btn {
    text-decoration: none !important;
}

        
        .btn-group {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }
        
        .btn-group .btn {
            padding: 10px 20px;
            border-radius: 50px;
            font-weight: 600;
            transition: all 0.3s;
        }

        
        
        .btn-outline-primary {
            color: #6e47ef;
            border: 2px solid #6e47ef;
            background-color: transparent;
        }
        
        .btn-outline-primary:hover, .btn-outline-primary.active {
            background: linear-gradient(45deg, #6e47ef, #7f69fa);
            color: white;
            border-color: transparent;
            box-shadow: 0 4px 10px rgba(110, 71, 239, 0.3);
        }
        
        .btn-outline-warning {
            color: #f6c23e;
            border: 2px solid #f6c23e;
            background-color: transparent;
        }
        
        .btn-outline-warning:hover, .btn-outline-warning.active {
            background: linear-gradient(45deg, #f6c23e, #ffb347);
            color: white;
            border-color: transparent;
            box-shadow: 0 4px 10px rgba(246, 194, 62, 0.3);
        }
        
        .btn-outline-success {
            color: #1cc88a;
            border: 2px solid #1cc88a;
            background-color: transparent;
        }
        
        .btn-outline-success:hover, .btn-outline-success.active {
            background: linear-gradient(45deg, #1cc88a, #2ecc71);
            color: white;
            border-color: transparent;
            box-shadow: 0 4px 10px rgba(28, 200, 138, 0.3);
        }
        
        .btn-outline-danger {
            color: #e74a3b;
            border: 2px solid #e74a3b;
            background-color: transparent;
        }
        
        .btn-outline-danger:hover, .btn-outline-danger.active {
            background: linear-gradient(45deg, #e74a3b, #ff5252);
            color: white;
            border-color: transparent;
            box-shadow: 0 4px 10px rgba(231, 74, 59, 0.3);
        }
        
        .table-card {
            background-color: #fff;
            border-radius: 16px;
            box-shadow: 0 5px 20px rgba(0,0,0,0.05);
            overflow: hidden;
            border: 1px solid #f0f3f9;
        }
        
        .table-responsive {
            overflow-x: auto;
            min-height: 0.01%;
            padding: 5px;
        }
        
        .data-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
        }
        
        .data-table thead {
            background: linear-gradient(45deg, #f8f9fc, #f0f3f9);
        }
        
        .data-table th {
            padding: 18px;
            font-weight: 700;
            color: #4a5568;
            text-align: left;
            border-bottom: 2px solid #e9ecef;
            white-space: nowrap;
            position: relative;
        }
        
        .data-table th:after {
            content: '';
            position: absolute;
            left: 0;
            bottom: 0;
            width: 100%;
            height: 3px;
            background: linear-gradient(to right, #6e47ef, transparent);
            opacity: 0.2;
        }
        
        .data-table td {
            padding: 5px;
            vertical-align: middle;
            border-bottom: 1px solid #f0f3f9;
            transition: all 0.3s;
            text-align: center;
            padding-top: 20px;
            padding-bottom: 20px;
    height: 100%; /* Đảm bảo đồng bộ chiều cao */
        }
        
        .data-row {
            transition: all 0.3s ease;
        }
        
        .data-row:hover {
            background-color: #f8f9fc;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.03);
            z-index: 1;
            position: relative;
        }
        
        .table-title-cell {
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 6px;
            font-size: 15px;
        }
        
        .table-content-preview {
            font-size: 13px;
            color: #718096;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            max-width: 300px;
            line-height: 1.5;
        }
        
        .badge {
            display: inline-flex;
            align-items: center;
            gap: 0px;
            padding: 4px 8px;
            border-radius: 50px;
            font-size: 12px;
            font-weight: 500;
            letter-spacing: 0.5px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }
        
        .badge.green {
            background: linear-gradient(45deg, rgba(28, 200, 138, 0.1), rgba(46, 204, 113, 0.1));
            color: #1cc88a;
            border: 1px solid rgba(28, 200, 138, 0.2);
        }
        
        .badge.yellow {
            background: linear-gradient(45deg, rgba(246, 194, 62, 0.1), rgba(255, 179, 71, 0.1));
            color: #f6c23e;
            border: 1px solid rgba(246, 194, 62, 0.2);
        }
        
        .badge.red {
            background: linear-gradient(45deg, rgba(231, 74, 59, 0.1), rgba(255, 82, 82, 0.1));
            color: #e74a3b;
            border: 1px solid rgba(231, 74, 59, 0.2);
        }
        
        .badge.blue {
            background: linear-gradient(45deg, rgba(78, 115, 223, 0.1), rgba(110, 71, 239, 0.1));
            color: #4e73df;
            border: 1px solid rgba(78, 115, 223, 0.2);
        }
        
        .badge.amber {
            background: linear-gradient(45deg, rgba(255, 152, 0, 0.1), rgba(255, 177, 66, 0.1));
            color: #ff9800;
            border: 1px solid rgba(255, 152, 0, 0.2);
        }
        
        .badge.gray {
            background: linear-gradient(45deg, rgba(108, 117, 125, 0.1), rgba(134, 142, 150, 0.1));
            color: #6c757d;
            border: 1px solid rgba(108, 117, 125, 0.2);
        }
        
.actions-cell {
    display: flex;
    gap: 8px;
    justify-content: center;
    align-items: center;
    padding: 18px; /* Đồng bộ với các ô khác */
    vertical-align: middle; /* Đảm bảo căn giữa dọc */
    text-align: center; /* Giống với các ô khác */
    height: 100%; /* Giữ nguyên chiều cao với các ô */
    box-sizing: border-box; /* Đảm bảo không bị co lại */
}

        .action-btn {
            width: 36px;
            height: 36px;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            color: #fff;
            transition: all 0.3s;
            border: none;
            cursor: pointer;
            box-shadow: 0 3px 8px rgba(0,0,0,0.1);
            position: relative;
            overflow: hidden;
        }
        
        .action-btn:before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255,255,255,0.1);
            transform: translateY(-100%);
            transition: all 0.3s;
        }
        
        .action-btn:hover:before {
            transform: translateY(0);
        }
        
        .action-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.15);
        }
        
        .view-btn {
            background: linear-gradient(45deg, #36b9cc, #4cc3d9);
        }
        
        .view-btn:hover {
            background: linear-gradient(45deg, #2c9faf, #36b9cc);
        }
        
        .edit-btn {
            background: linear-gradient(45deg, #4e73df, #6e47ef);
        }
        
        .edit-btn:hover {
            background: linear-gradient(45deg, #3a5ccc, #4e73df);
        }
        
        .approve-btn {
            background: linear-gradient(45deg, #1cc88a, #2ecc71);
        }
        
        .approve-btn:hover {
            background: linear-gradient(45deg, #17a673, #1cc88a);
        }
        
        .reject-btn {
            background: linear-gradient(45deg, #e74a3b, #ff5252);
        }
        
        .reject-btn:hover {
            background: linear-gradient(45deg, #d52a1a, #e74a3b);
        }
        
        .delete-btn {
            background: linear-gradient(45deg, #e74a3b, #ff5252);
        }
        
        .delete-btn:hover {
            background: linear-gradient(45deg, #d52a1a, #e74a3b);
        }
        
        /* Responsive adjustments */
        @@media (max-width: 992px) {
            .page-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 16px;
            }
            
            .actions-cell {
                flex-wrap: wrap;
            }
        }
        
        @@media (max-width: 768px) {
            .data-table th, .data-table td {
                padding: 12px 10px;
            }
            
            .table-content-preview {
                max-width: 200px;
            }
        }
    </style>
}

@section Scripts {
    <script src="~/js/jsadmin/posts.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Toggle sidebar functionality
            const toggleBtn = document.querySelector('.toggle-sidebar');
            toggleBtn.addEventListener('click', function() {
                document.body.classList.toggle('sidebar-collapsed');
                this.classList.toggle('active');
            });
            
            // Add hover effects and animation to table rows
            const dataRows = document.querySelectorAll('.data-row');
            dataRows.forEach(row => {
                row.addEventListener('mouseenter', function() {
                    this.style.backgroundColor = '#f8f9fc';
                    this.style.transform = 'translateY(-2px)';
                    this.style.boxShadow = '0 5px 15px rgba(0,0,0,0.03)';
                });
                row.addEventListener('mouseleave', function() {
                    this.style.backgroundColor = '';
                    this.style.transform = '';
                    this.style.boxShadow = '';
                });
            });
            
            // Add tooltip functionality for buttons
            const actionBtns = document.querySelectorAll('.action-btn');
            actionBtns.forEach(btn => {
                const title = btn.getAttribute('title');
                if (title) {
                    const tooltip = document.createElement('div');
                    tooltip.className = 'tooltip';
                    tooltip.textContent = title;
                    btn.appendChild(tooltip);
                    
                    btn.addEventListener('mouseenter', function() {
                        tooltip.style.opacity = '1';
                        tooltip.style.transform = 'translateY(-5px)';
                    });
                    
                    btn.addEventListener('mouseleave', function() {
                        tooltip.style.opacity = '0';
                        tooltip.style.transform = 'translateY(0)';
                    });
                }
            });
            
            // Add pulse animation to status badges
            const badges = document.querySelectorAll('.badge');
            badges.forEach(badge => {
                badge.style.position = 'relative';
                badge.style.overflow = 'hidden';
                
                const ripple = document.createElement('span');
                ripple.className = 'ripple';
                badge.appendChild(ripple);
                
                badge.addEventListener('mouseenter', function() {
                    ripple.style.animation = 'ripple 1s';
                });
                
                badge.addEventListener('mouseleave', function() {
                    ripple.style.animation = '';
                });
            });
        });
    </script>
    <style>
        @@keyframes ripple {
            0% {
                width: 0;
                height: 0;
                opacity: 0.8;
            }
            100% {
                width: 200px;
                height: 200px;
                opacity: 0;
            }
        }
        
        .ripple {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            pointer-events: none;
        }
        
        .tooltip {
            position: absolute;
            bottom: 100%;
            left: 50%;
            transform: translateX(-50%) translateY(0);
            background: rgba(0, 0, 0, 0.8);
            color: white;
            padding: 5px 10px;
            border-radius: 4px;
            font-size: 12px;
            white-space: nowrap;
            opacity: 0;
            pointer-events: none;
            transition: all 0.3s;
            z-index: 10;
            margin-bottom: 8px;
        }
        
        .tooltip:after {
            content: '';
            position: absolute;
            top: 100%;
            left: 50%;
            transform: translateX(-50%);
            border-width: 5px;
            border-style: solid;
            border-color: rgba(0, 0, 0, 0.8) transparent transparent transparent;
        }
        
        .toggle-sidebar.active {
            background: linear-gradient(45deg, #4e73df, #6e47ef);
            transform: rotate(90deg);
        }
    </style>
}

<div class="app-container">
    <div class="main-content">
        <main class="content-wrapper">
            <button class="toggle-sidebar">
                <i class="fas fa-bars"></i>
            </button>

            <div class="page-header">
                <h1 class="page-title">Quản Lý Bài Viết</h1>
            </div>

            <div class="filter-card">
                @{
    var currentStatus = ViewContext.RouteData.Values["status"]?.ToString();
}
<div class="btn-group" role="group">
    <a asp-action="Moderate" asp-route-status="" class="btn btn-outline-primary text-decoration-none @(string.IsNullOrEmpty(currentStatus) ? "hover" : "")">Tất cả</a>
    <a asp-action="Moderate" asp-route-status="Pending" class="btn btn-outline-warning text-decoration-none @(currentStatus == "Pending" ? "hover" : "")">Chờ duyệt</a>
    <a asp-action="Moderate" asp-route-status="Approved" class="btn btn-outline-success text-decoration-none @(currentStatus == "Approved" ? "hover" : "")">Đã duyệt</a>
    <a asp-action="Moderate" asp-route-status="Rejected" class="btn btn-outline-danger text-decoration-none @(currentStatus == "Rejected" ? "hover" : "")">Từ chối</a>
</div>

                
            </div>

            <div class="table-card">
                <div class="table-responsive">
                    <table class="data-table">
                        <thead>
                            <tr>
                                <th style="width: 2%">STT</th>
                                <th style="width: 15%">Tiêu đề</th>
                                <th style="width: 5%">Loại</th>
                                <th style="width: 15%">Địa điểm</th>
                                <th style="width: 18%">Tác giả</th>
                                <th style="width: 10%">Ngày đăng</th>
                                <th style="width: 10%">Trạng thái</th>
                                <th style="width: 25%">Hành động</th>
                            </tr>
                        </thead>
                       <tbody>
    @{
        int index = 1; // Khởi tạo biến đếm
    }
    @foreach (var item in Model)
    {
        var badgeClass = item.Status switch
        {
            TourismWeb.Models.PostStatus.Pending => "badge yellow",
            TourismWeb.Models.PostStatus.Approved => "badge green",
            TourismWeb.Models.PostStatus.Rejected => "badge red",
            _ => "badge gray"
        };

        var badgeText = item.Status switch
        {
        TourismWeb.Models.PostStatus.Pending => "Chờ duyệt",
        TourismWeb.Models.PostStatus.Approved => "Đã duyệt",
        TourismWeb.Models.PostStatus.Rejected => "Từ chối",
        _ => "Không xác định"
       };

        var typeBadgeClass = item.TypeOfPost switch
        {
            "Địa điểm" => "badge blue",
            "Cẩm nang" => "badge green",
            "Trải nghiệm" => "badge amber",
            _ => "badge gray"
        };

        <tr class="data-row">
            <td>@index</td> <!-- Hiển thị số thứ tự -->
            <td>
                <div class="table-title-cell">@item.Title</div>
                <div class="table-content-preview">@Html.Raw(item.Content?.Substring(0, Math.Min(100, item.Content?.Length ?? 0)))@((item.Content?.Length ?? 0) > 100 ? "..." : "")</div>
            </td>
            <td>
                <span class="@typeBadgeClass">
                    @if (item.TypeOfPost == "Địa điểm")
                    {
                        @:<i class="fas fa-map-marker-alt"></i> Địa điểm
                    }
                    else if (item.TypeOfPost == "Cẩm nang")
                    {
                        @:<i class="fas fa-book"></i> Cẩm nang
                    }
                    else
                    {
                        @:<i class="fas fa-star"></i> Trải nghiệm
                    }
                </span>
            </td>
            <td>@item.Spot?.Name</td>
            <td>@item.User?.FullName</td>
            <td>@item.CreatedAt.ToString("dd/MM/yyyy")</td>
            @* <td><span class="@badgeClass">@item.Status</span></td> *@
             <td><span class="@badgeClass">@badgeText</span></td>
            <td>
                <a asp-action="Details" asp-route-id="@item.PostId" class="action-btn view-btn" title="Xem"><i class="fas fa-eye"></i></a>
                <a asp-action="Edit" asp-route-id="@item.PostId" class="action-btn edit-btn" title="Sửa"><i class="fas fa-edit"></i></a>

                @if (item.Status == TourismWeb.Models.PostStatus.Pending)
                {
                    <form asp-action="Approve" asp-route-id="@item.PostId" method="post" style="display: inline;">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="action-btn approve-btn" title="Duyệt"><i class="fas fa-check"></i></button>
                    </form>
                    <form asp-action="Reject" asp-route-id="@item.PostId" method="post" style="display: inline;">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="action-btn reject-btn" title="Từ chối"><i class="fas fa-times"></i></button>
                    </form>
                }
                else if (item.Status == TourismWeb.Models.PostStatus.Approved)
                {
                    <form asp-action="Reject" asp-route-id="@item.PostId" method="post" style="display: inline;">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="action-btn reject-btn" title="Từ chối"><i class="fas fa-times"></i></button>
                    </form>
                }
                else if (item.Status == TourismWeb.Models.PostStatus.Rejected)
                {
                    <form asp-action="Approve" asp-route-id="@item.PostId" method="post" style="display: inline;">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="action-btn approve-btn" title="Duyệt"><i class="fas fa-check"></i></button>
                    </form>
                }

                <a asp-action="Delete" asp-route-id="@item.PostId" class="action-btn delete-btn" title="Xóa" onclick="return confirm('Bạn có chắc chắn muốn xóa bài viết này không?');"><i class="fas fa-trash"></i></a>
            </td>
        </tr>
        index++; // Tăng số thứ tự sau mỗi bài viết
    }
</tbody>

                    </table>
                </div>
            </div>
        </main>
    </div>
</div>